/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, QuickLink as PrismaQuickLink } from "@prisma/client";

export class QuickLinkServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.QuickLinkCountArgs, "select">
  ): Promise<number> {
    return this.prisma.quickLink.count(args);
  }

  async quickLinks(
    args: Prisma.QuickLinkFindManyArgs
  ): Promise<PrismaQuickLink[]> {
    return this.prisma.quickLink.findMany(args);
  }
  async quickLink(
    args: Prisma.QuickLinkFindUniqueArgs
  ): Promise<PrismaQuickLink | null> {
    return this.prisma.quickLink.findUnique(args);
  }
  async createQuickLink(
    args: Prisma.QuickLinkCreateArgs
  ): Promise<PrismaQuickLink> {
    return this.prisma.quickLink.create(args);
  }
  async updateQuickLink(
    args: Prisma.QuickLinkUpdateArgs
  ): Promise<PrismaQuickLink> {
    return this.prisma.quickLink.update(args);
  }
  async deleteQuickLink(
    args: Prisma.QuickLinkDeleteArgs
  ): Promise<PrismaQuickLink> {
    return this.prisma.quickLink.delete(args);
  }
}
