/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, SocialPost as PrismaSocialPost } from "@prisma/client";

export class SocialPostServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.SocialPostCountArgs, "select">
  ): Promise<number> {
    return this.prisma.socialPost.count(args);
  }

  async socialPosts(
    args: Prisma.SocialPostFindManyArgs
  ): Promise<PrismaSocialPost[]> {
    return this.prisma.socialPost.findMany(args);
  }
  async socialPost(
    args: Prisma.SocialPostFindUniqueArgs
  ): Promise<PrismaSocialPost | null> {
    return this.prisma.socialPost.findUnique(args);
  }
  async createSocialPost(
    args: Prisma.SocialPostCreateArgs
  ): Promise<PrismaSocialPost> {
    return this.prisma.socialPost.create(args);
  }
  async updateSocialPost(
    args: Prisma.SocialPostUpdateArgs
  ): Promise<PrismaSocialPost> {
    return this.prisma.socialPost.update(args);
  }
  async deleteSocialPost(
    args: Prisma.SocialPostDeleteArgs
  ): Promise<PrismaSocialPost> {
    return this.prisma.socialPost.delete(args);
  }
}
